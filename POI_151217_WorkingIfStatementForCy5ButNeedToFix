package com.mycompany.app;

import java.io.File;
import java.io.FileInputStream;
//import java.io.FileNotFoundException;
import java.io.FileOutputStream;
// import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
//import org.apache.poi.sl.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.hssf.util.CellReference;
//import org.apache.poi.ss.usermodel.*;

public class App {
	
		private static String result(Cell f) throws IOException {
			InputStream ExcelFileToRead = new FileInputStream("/home/nat/x1/src/main/java/com/mycompany/app/data2.xls");
			HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead); // creates new workbook object using an (input stream)
			HSSFSheet sheet=wb.getSheetAt(0);
			Iterator<Row> rowIterator = sheet.iterator();
			Row row = rowIterator.next();
					
            if ( row.getRowNum() == 0 ) { // starts iterating at row #
            	
				if (f.getCellType() == HSSFCell.CELL_TYPE_STRING) 
				{
					return "Neg";
				} 
				else if (f.getCellType() == HSSFCell.CELL_TYPE_NUMERIC)
				{
					if (f.getNumericCellValue() > 52) 
						return "104K";
				}
				else
				{
					return "-";
				}
            }
			return "return statement";
	    }

		   private static String output() throws IOException {
			InputStream ExcelFileToRead = new FileInputStream("/home/nat/x1/src/main/java/com/mycompany/app/data2.xls");
			HSSFWorkbook wb = new HSSFWorkbook(ExcelFileToRead); // creates new workbook object using an (input stream)
			HSSFSheet sheet=wb.getSheetAt(0);
			Iterator<Row> rowIterator = sheet.iterator();
			DataFormatter dataFormatter = new DataFormatter();
			
			while ( rowIterator.hasNext() ) {

				Row row = rowIterator.next();
				Cell a = row.getCell(0);
				Cell b = row.getCell(1);
				//Cell c = row.getCell(2);
				//Cell d = row.getCell(3);
				Cell e = row.getCell(4);
				Cell f = row.getCell(5);
				
				//System.out.println(a + " " + b + " " + c + " " + d + " " + e + " " + f);
				
	            String dfA = dataFormatter.formatCellValue(a); // returns the formatted value of a cell as a String regardless of the cell type.
	            String dfB = dataFormatter.formatCellValue(b);
	            //String dfC = dataFormatter.formatCellValue(c);
	            //String dfD = dataFormatter.formatCellValue(d);
	            //String dfE = dataFormatter.formatCellValue(e);
	            //String dfF = dataFormatter.formatCellValue(f);
	            
				if ( dfA.equals("A01") && dfB.equals("Cy5") ) {
					System.out.println(a + " " + b + " " + e + " " + result(f));
				}	
				if ( dfA.equals("B01") && dfB.equals("Cy5") ) {
					System.out.println(a + " " + b + " " + e + " " + result(f) );
				}
				if ( dfA.equals("E03") && dfB.equals("Cy5") ) {
					System.out.println(a + " " + b + " " + e + " " + result(f) );
				}
			}
			return "something";
		}
					
		public static void main(String[] args) throws IOException {
			System.out.println("WELL " + "SAMPLE " + "Cy5(104K)");
    		output();
		}

}
